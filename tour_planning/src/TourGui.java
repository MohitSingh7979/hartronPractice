/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.Color;
import java.sql.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mohit
 */
public class TourGui extends javax.swing.JFrame {

    Connection con;
    PreparedStatement ps;
    String sql;

    /**
     * Creates new form TourGui
     */
    public TourGui() {
        initComponents();
        createConnection();
        fillTour();
        showReport1();
        showReport2();
    }

    void showReport2() {
        try {
            sql = "SELECT tour_name,sum(total_cost) FROM ticket_details td join tour_master tm on td.tour_id = tm.tour_id group by tour_name";
            ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel tm = (DefaultTableModel) report2.getModel();
            tm.setRowCount(0);
            while (rs.next()) {
                Object[] data = new Object[]{
                    rs.getObject(1),
                    rs.getObject(2),};
                tm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void showReport1() {
        try {
            sql = "SELECT ticket_no,tour_name,passangers,total_cost FROM ticket_details td join tour_master tm on td.tour_id = tm.tour_id where return_ticket = 0";
            ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel tm = (DefaultTableModel) report1.getModel();
            tm.setRowCount(0);
            while (rs.next()) {
                Object[] data = new Object[]{
                    rs.getObject(1),
                    rs.getObject(2),
                    rs.getObject(3),
                    rs.getObject(4),};
                tm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void fillCost() {
        String[] tourStrings = tour.getSelectedItem().toString().split("-");
        int tourId = Integer.parseInt(tourStrings[0]);
        sql = "SELECT tour_cost FROM tour_master where tour_id = ?";
        try {
            ps = con.prepareStatement(sql);
            ps.setInt(1, tourId);
            ResultSet rs = ps.executeQuery();
            rs.next();
            double cost = rs.getDouble(1);

            boolean ret = returnTickets.isSelected();
            double retCost = cost + (cost * 1.10);
            cost = ret ? retCost : cost;
            totalCost.setText(String.valueOf(cost));

        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillTour() {
        sql = "SELECT * FROM tour_master";
        try {
            ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            tour.removeAllItems();
            while (rs.next()) {
                tour.addItem(("%s-%s").formatted(rs.getString(1), rs.getString(2)));
            }
        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void createConnection() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tour_planning", "root", "root");
        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bookTicketBtn = new javax.swing.JButton();
        tour = new javax.swing.JComboBox<>();
        ticket = new javax.swing.JSpinner();
        date = new javax.swing.JSpinner();
        days = new javax.swing.JSpinner();
        passan = new javax.swing.JSpinner();
        returnTickets = new javax.swing.JCheckBox();
        totalCost = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        report1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        report2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("TOUR");

        jLabel2.setText("TICKET NO");

        jLabel3.setText("PICKUP DATE");

        jLabel4.setText("DAYS");

        jLabel5.setText("PASSANGERS");

        jLabel6.setText("RETURN TICKETS");

        jLabel7.setText("TOTAL COST");

        bookTicketBtn.setText("BOOK TOUR TICKETS");
        bookTicketBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTicketBtnActionPerformed(evt);
            }
        });

        tour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tourActionPerformed(evt);
            }
        });

        ticket.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        ticket.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ticketFocusGained(evt);
            }
        });

        date.setModel(new javax.swing.SpinnerDateModel());

        days.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        passan.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        returnTickets.setText("Yes, I wanna Return");
        returnTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnTicketsActionPerformed(evt);
            }
        });

        totalCost.setEditable(false);

        report1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ticket No", "Tour Name", "Passangers", "Total Cost"
            }
        ));
        jScrollPane1.setViewportView(report1);

        report2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tour Name", "Grand Total Cost"
            }
        ));
        jScrollPane2.setViewportView(report2);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Tour Booking APP");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bookTicketBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tour, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ticket, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(days, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(returnTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tour, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ticket, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(days, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bookTicketBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookTicketBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTicketBtnActionPerformed
        sql = "";
        try {
            ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                ticket.setBackground(Color.red);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }

        String[] tourStrings = tour.getSelectedItem().toString().split("-");
        int tourId = Integer.parseInt(tourStrings[0]);

        sql = "INSERT INTO `tour_planning`.`ticket_details` ("
                + "     `ticket_no`, "
                + "     `tour_id`, "
                + "     `pickup_date`, "
                + "     `days`, "
                + "     `passangers`, "
                + "     `return_ticket`, "
                + "     `total_cost`"
                + " ) VALUES (?, ?, ?, ?, ?, ?, ?);";
        try {
            ps = con.prepareStatement(sql);
            ps.setObject(1, ticket.getValue());
            ps.setObject(2, tourId);
            ps.setObject(3, date.getValue());
            ps.setObject(4, days.getValue());
            ps.setObject(5, passan.getValue());
            ps.setObject(6, returnTickets.isSelected());
            ps.setObject(7, totalCost.getSelectedText());
            int executeUpdate = ps.executeUpdate();
            showReport1();
            showReport2();
        } catch (SQLException ex) {
            Logger.getLogger(TourGui.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bookTicketBtnActionPerformed

    private void tourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tourActionPerformed
        // TODO add your handling code here:
        fillCost();

    }//GEN-LAST:event_tourActionPerformed

    private void returnTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnTicketsActionPerformed
        // TODO add your handling code here:
        fillCost();
    }//GEN-LAST:event_returnTicketsActionPerformed

    private void ticketFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ticketFocusGained
        // TODO add your handling code here:
        ticket.setBackground(Color.white);
    }//GEN-LAST:event_ticketFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TourGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookTicketBtn;
    private javax.swing.JSpinner date;
    private javax.swing.JSpinner days;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner passan;
    private javax.swing.JTable report1;
    private javax.swing.JTable report2;
    private javax.swing.JCheckBox returnTickets;
    private javax.swing.JSpinner ticket;
    private javax.swing.JTextField totalCost;
    private javax.swing.JComboBox<String> tour;
    // End of variables declaration//GEN-END:variables
}
